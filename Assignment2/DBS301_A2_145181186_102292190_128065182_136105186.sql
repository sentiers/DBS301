-- ***********************
-- Name: Mohammed Jaber
-- ID: 145181186

-- Name: Clinton Sheppard
-- ID: 102292190
-- DBS301_201E34


-- Name: Hyunji Cho
-- ID: 128065182

-- Name: Vinicius Carassini
-- ID: 136105186
-- dbs301_201d15

-- Date: April 2nd, 2020
-- Purpose: Assignment 2 - DBS301
-- ***********************

DROP TABLE a2JNC_PROG_STUDENTS CASCADE CONSTRAINTS;
DROP TABLE a2JNC_PROG_COURSES CASCADE CONSTRAINTS;
DROP TABLE a2JNC_STUDENTS_SECTIONS CASCADE CONSTRAINTS;
DROP TABLE a2programs CASCADE CONSTRAINTS;
DROP TABLE a2advisors CASCADE CONSTRAINTS;
DROP TABLE a2students CASCADE CONSTRAINTS;
DROP TABLE a2sections CASCADE CONSTRAINTS;
DROP TABLE a2professors CASCADE CONSTRAINTS;
DROP TABLE a2term;
DROP TABLE a2countries;
DROP TABLE a2employees;
DROP TABLE a2courses;
DROP TABLE a2departments;



CREATE TABLE a2term (
    termCode     VARCHAR2(3)     PRIMARY KEY,
    termName     VARCHAR2(11)     NOT NULL,
    startDate     DATE             NOT NULL,
    endDate       DATE             NOT NULL
);

CREATE TABLE a2departments (
    deptCode        VARCHAR2(10)     PRIMARY KEY,
    deptName        VARCHAR2(70)     NOT NULL,
    officeNumber    VARCHAR2(10)     NOT NULL,
    displayOrder    NUMBER(1)
);

CREATE TABLE a2countries (
    countryCode CHAR(2)             PRIMARY KEY,
    countryName VARCHAR2(20),
    continent   VARCHAR2(20),
    isActive    NUMBER(1)             DEFAULT(1)
    );
    
CREATE TABLE a2employees (
    empID       NUMBER(10,0)    PRIMARY KEY,
    firstName   VARCHAR2(20)    NOT NULL,
    lastName    VARCHAR2(25)    NOT NULL,
    empPrefix   VARCHAR2(10),
    empSuffix   VARCHAR2(10),
    isActive    NUMBER(1)       DEFAULT(1),
    SIN         VARCHAR2(9)     NOT NULL,
    DOB         DATE            NOT NULL,
    email       VARCHAR2(50)    NOT NULL,
    Phone       VARCHAR2(20)    NOT NULL
);

CREATE TABLE a2courses (
    courseCode          VARCHAR2(6)     PRIMARY KEY,
    courseName          VARCHAR2(50)    NOT NULL,
    courseDescription   VARCHAR2(650),
    isAvailable         NUMBER(1)             DEFAULT(1),
    termTaken           VARCHAR2(6)
);

CREATE TABLE a2professors (
    empID       NUMBER(10,0)     PRIMARY KEY,
    deptCode    VARCHAR2(30)    NOT NULL,
    isActive    NUMBER(1)       DEFAULT(1),
    CONSTRAINT fk_deptcode_professors FOREIGN KEY (deptCode) REFERENCES a2departments (deptCode)
);

CREATE TABLE a2programs (
    progCode       VARCHAR2(4)    PRIMARY KEY,
    progName       VARCHAR2(50)    NOT NULL,
    lengthYears    NUMBER(38,0),
    isCurrent      NUMBER(1) DEFAULT(1)    NOT NULL,
    deptCode       VARCHAR2(30)    NOT NULL,
    CONSTRAINT fk_prog_depts FOREIGN KEY (deptCode) REFERENCES a2departments (deptCode)
);

CREATE TABLE a2advisors (
    empID       NUMBER(10,0)    PRIMARY KEY,
    isActive    NUMBER(1)        DEFAULT(0),
    CONSTRAINT advisors_isActive_chk CHECK(isActive IN(1, 0)),  
    CONSTRAINT advisors_empID_fk FOREIGN KEY(empID) REFERENCES a2employees (empID)
);

CREATE TABLE a2students (
    studentID NUMBER(9) GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    firstName VARCHAR2(20),
    lastName VARCHAR2(25),
    DOB DATE,
    gender CHAR DEFAULT ('N'),
    email VARCHAR2(40),
    homeCountry CHAR(2),
    phone VARCHAR(10),
    advisorID NUMBER(10,0),
    CONSTRAINT fk_home_country FOREIGN KEY (homeCountry) REFERENCES a2countries (CountryCode),
    CONSTRAINT fk_student_advisor FOREIGN KEY (advisorID) REFERENCES a2advisors (empID)
);

CREATE TABLE a2sections (
    sectionID     NUMBER(5) GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    sectionLetter CHAR,
    courseCode VARCHAR2(6),
    termCode VARCHAR2(3),
    profID NUMBER(10)
    , CONSTRAINT fk_courses FOREIGN KEY (courseCode) REFERENCES a2courses (courseCode)
    , CONSTRAINT fk_term FOREIGN KEY (termCode) REFERENCES a2term (termCode)
    , CONSTRAINT fk_profs FOREIGN KEY (profID) REFERENCES a2professors (empID)
);

CREATE TABLE a2JNC_STUDENTS_SECTIONS(
    sectionID NUMBER(5),
    studentID NUMBER(9),
    gradeObtained NUMBER(3),
    isActive NUMBER(1,0),
        CONSTRAINT pk_stu_sec PRIMARY KEY(sectionID, studentID),
        CONSTRAINT fk_stu_sec FOREIGN KEY(sectionID)
            REFERENCES a2sections(sectionID),
        CONSTRAINT fk_prog_stu FOREIGN KEY(studentID)
            REFERENCES a2students(studentID)
);

CREATE TABLE a2JNC_PROG_COURSES (
    progCourseID    NUMBER(3)         PRIMARY KEY,
    progCode        VARCHAR2(4)     NOT NULL,
    courseCode      VARCHAR2(6)     NOT NULL,
    isActive        NUMBER(1)         DEFAULT 0,
    CONSTRAINT jnc_prog_courses_progCode_fk FOREIGN KEY(progCode)
        REFERENCES a2programs(progCode),
    CONSTRAINT jnc_prog_courses_courseCode_fk FOREIGN KEY(courseCode)
        REFERENCES a2courses(courseCode),
    CONSTRAINT jnc_prog_courses_isActive_chk CHECK(IsActive IN(1, 0))
);


CREATE TABLE a2JNC_PROG_STUDENTS (
    progCode        VARCHAR2(4),
    studentID       NUMBER(9),
    isActive        NUMBER(1)         DEFAULT 0,
        CONSTRAINT prog_students_pk PRIMARY KEY(progCode, studentID),
        CONSTRAINT prog_students_progCode_fk FOREIGN KEY(progCode)
            REFERENCES a2programs(progCode),
        CONSTRAINT prog_students_studentID_fk FOREIGN KEY(studentID)
            REFERENCES a2students(studentID),
        CONSTRAINT prog_students_isActive_chk CHECK(IsActive IN(1, 0))
);

-- Terms
INSERT INTO a2term
    VALUES ('W20', 'WINTER 2020', TO_DATE('2020-01-06', 'yyyy-mm-dd'), TO_DATE('2020-04-17', 'yyyy-mm-dd'));


-- Departments
INSERT INTO a2departments VALUES ('SDDS', 'School of Software Design and Data Science', 'A3058', 1);
INSERT INTO a2departments VALUES ('SIATS', 'School of Information Technology Administration and Security', 'A3058', 2);
INSERT INTO a2departments VALUES ('SELS', 'School of English and Liberal Studies', 'B3001', 3);

-- Countries
INSERT INTO a2countries VALUES ('CA', 'Canada', 'North America', 1);

-- Employees

INSERT INTO a2employees VALUES (0000000000, 'Unknown', 'Unknown', '', '', 0, 0000000000, TO_DATE('1960-01-01', 'yyyy-mm-dd'), 'contact@senecacollege.ca', '4164915050');
INSERT INTO a2employees VALUES (0000000001, 'Clint', 'MacDonald', '', '', 1, 123456789, TO_DATE('1972-04-30', 'yyyy-mm-dd'), 'clint.macdonald@senecacollege.ca', '4164915050:24158');
INSERT INTO a2employees VALUES (0000000002, 'Mary', 'Sorkbhari', '', '', 1, 123456790, TO_DATE('1979-04-29', 'yyyy-mm-dd'), 'mary.sorkbhari@senecacollege.ca', '4164915050:24026');
INSERT INTO a2employees VALUES (0000000003, 'Adeel', 'Javed', '', '', 1, 123456791, TO_DATE('1970-03-29', 'yyyy-mm-dd'), 'adeel.javed@senecacollege.ca', '4164915050:24026');
INSERT INTO a2employees VALUES (0000000004, 'Mohamed', 'Kassim', '', '', 1, 123456792, TO_DATE('1985-06-15', 'yyyy-mm-dd'), 'mohamed.kassim@senecacollege.ca', '4164915050:22605');
INSERT INTO a2employees VALUES (0000000015, 'Betrice', 'Brangman', '', '', 1, 123456713, TO_DATE('1975-02-18', 'yyyy-mm-dd'), 'betrice.brangman@senecacollege.ca', '4164915050:26683');

-- Courses
INSERT INTO a2courses VALUES
    ('OOP345', 'Object-Oriented Software Development Using C++', 'This subject expands the students skill-set in object-oriented programming and introduces the student to threaded programming.  The student learns to model relationships between classes using containers, inheritance hierarchies and polymorphism in the C++ programming language and to write C++ programs that execute on multiple threads.', 1, 'W20');
INSERT INTO a2courses VALUES
    ('DBS301', 'Database Design II and SQL Using Oracle', 'This subject continues the study of database design and SQL begun in DBS201. Students will learn the entire set of SQL statements using Oracles DBMS. Students will also learn Oracles SQL Plus commands. Students will work in teams to prepare and implement the logical and physical database schema for a business application requiring 12-18 tables including all necessary contraints to protect the integrity of the data.', 1, 'W20');
INSERT INTO a2courses VALUES
    ('SYS366', 'Requirements Gathering Using OO Models', 'This subject focuses on the techniques and tools involved in gathering requirements for business systems that will solve business stakeholders processing problems.', 1, 'W20');
INSERT INTO a2courses VALUES
    ('EAC594', 'Business Communication for the Digital Workplace', 'With businesses thriving on good customer relationships, effective business communication is the cornerstone of company success. This course will help you learn the principles, practices, and tools for communicating effectively in the workplace using cases and/or projects. From learning about audience, context, formats, tone, and media to applying your skills in writing correspondence, reports, and presentations, this course will guide you in developing professional interpersonal, collaborative, and web-based knowledge and practices.', 1, 'W20');


-- professors
INSERT INTO a2professors VALUES (0000000000, 'SDDS', 0);
INSERT INTO a2professors VALUES (0000000001, 'SDDS', 1);
INSERT INTO a2professors VALUES (0000000002, 'SDDS', 1);
INSERT INTO a2professors VALUES (0000000003, 'SDDS', 1);
INSERT INTO a2professors VALUES (0000000004, 'SIATS', 1);

-- programs
INSERT INTO a2programs VALUES ('CPD', 'Computer Programmer', 2, 1, 'SDDS');
INSERT INTO a2programs VALUES ('CPA', 'Computer Programming and Analysis', 3, 1, 'SDDS');
INSERT INTO a2programs VALUES ('CTY', 'Computer Systems Technology', 3, 1, 'SIATS');


-- advisors
INSERT INTO a2advisors VALUES (0000000015, 1);


-- students
INSERT INTO a2students VALUES (145181186, 'Mohammed', 'Jaber', TO_DATE('1995-05-23', 'yyyy-mm-dd'), 'M', 'mjaber3@myseneca.ca', 'CA', '6472154752', 0000000015);


-- a2sections  
INSERT INTO a2sections VALUES ( 00001, 'A', 'OOP345', 'W20', 0000000003);
INSERT INTO a2sections VALUES ( 00002, 'D', 'DBS301', 'W20', 0000000001);
INSERT INTO a2sections VALUES ( 00003, 'N', 'SYS366', 'W20', 0000000004);
INSERT INTO a2sections VALUES ( 00004, 'B', 'EAC594', 'W20', 0000000002);


-- a2JNC_PROG_STUDENTS
INSERT INTO a2JNC_PROG_STUDENTS VALUES ('CPD', 145181186, 0);
INSERT INTO a2JNC_PROG_STUDENTS VALUES ('CPA', 145181186, 1);
INSERT INTO a2JNC_PROG_STUDENTS VALUES ('CTY', 145181186, 0);


-- a2JNC_PROG_COURSES
INSERT INTO a2JNC_PROG_COURSES VALUES ( 111, 'CPA', 'OOP345', 1);
INSERT INTO a2JNC_PROG_COURSES VALUES ( 222, 'CPA', 'DBS301', 1);
INSERT INTO a2JNC_PROG_COURSES VALUES ( 333, 'CPA', 'SYS366', 1);
INSERT INTO a2JNC_PROG_COURSES VALUES ( 444, 'CPA', 'EAC594', 1);


-- a2JNC_STUDENTS_SECTIONS
INSERT INTO a2JNC_STUDENTS_SECTIONS VALUES (00001, 145181186, 80, 1);
INSERT INTO a2JNC_STUDENTS_SECTIONS VALUES (00002, 145181186, 81, 1);
INSERT INTO a2JNC_STUDENTS_SECTIONS VALUES (00003, 145181186, 82, 1);
INSERT INTO a2JNC_STUDENTS_SECTIONS VALUES (00004, 145181186, 83, 1);


--  i.    A student transcript that contains all the courses taken and the marks obtained for each student
CREATE OR REPLACE VIEW a2Transcript_vw AS (
    SELECT  firstName || ' ' || lastName AS "Student Name",
            courseCode AS "Course Taken",
            gradeObtained AS "Mark"
        FROM a2students JOIN a2jnc_students_sections USING(studentID)
            JOIN a2sections USING(sectionID)
);


-- ii.    A Class list for students enrolled in a particular course section
CREATE OR REPLACE VIEW a2ClassList_vw AS (
    SELECT  firstName ||' ' || lastName AS "Student Name",
            studentID AS "Student ID",
            sectionID AS "Section ID"
        FROM a2sections JOIN a2jnc_students_sections USING (sectionID)
            JOIN a2students USING (studentid)
        WHERE upper(termCode) LIKE upper('%&termCode%')
            AND upper(courseCode) LIKE upper('%&courseCode%')
            AND upper(sectionLetter) LIKE upper('%&sectionletter%')
);  
-- termCode: W20
-- courseCode: OOP345
-- sectionLetter: A


-- iii.    The average mark for each section and the professor whom instructed it
CREATE OR REPLACE VIEW a2SectionAverage_vw AS (
    SELECT  sectionID AS "Section ID",
            round(avg(gradeObtained),2) AS "Section Average",
            profID AS "Professor ID",
            (SELECT firstName || ' ' || lastName
                    FROM a2employees e
                    WHERE e.empID = a2sections.profID
            ) AS "Professor Name"
        FROM a2jnc_students_sections JOIN a2sections USING (sectionID)
            JOIN a2employees ON a2employees.empID = a2sections.profID
            JOIN a2term USING(termCode)
        WHERE startDate < sysdate
        GROUP BY sectionID, profID    
);    


-- iv.    An output of all the courses required for each program sorted by program name and the term required.
CREATE OR REPLACE VIEW a2CoursesReqProgram_vw AS (
    SELECT  progCode AS "Program Code",
            courseCode AS "Course Code",
            courseName AS "Course Required",
            termTaken AS "Term Required"
        FROM a2jnc_prog_courses JOIN a2courses USING (courseCode)
        )
        ORDER BY progCode, termTaken;
        

-- v.    A term specific list of which professors are teaching which courses and how many students are enrolled in each course section.  Remember that professors can teach more than one section of the same course each term.
CREATE OR REPLACE VIEW a2TermListProf_vw AS (
    SELECT  courseCode AS "Course Code",
            courseName AS "Course Name",
            sectionLetter AS "Section",
            lastName AS "Professor",
            count(studentID) AS "Students Enrolled"
        FROM a2employees JOIN a2sections ON a2employees.empID = a2sections.profID
            RIGHT JOIN a2courses USING (courseCode)
            LEFT JOIN a2jnc_students_sections USING (sectionID)
        WHERE termCode LIKE '%&termCode%'
        GROUP BY courseCode, courseName, sectionLetter, lastName
);        
-- termCode: W20

-------- Managing permissions --------
-- revoking all from public
REVOKE ALL ON a2JNC_PROG_STUDENTS FROM PUBLIC;
REVOKE ALL ON a2JNC_PROG_COURSES FROM PUBLIC;
REVOKE ALL ON a2JNC_STUDENTS_SECTIONS FROM PUBLIC;
REVOKE ALL ON a2programs FROM PUBLIC;
REVOKE ALL ON a2advisors FROM PUBLIC;
REVOKE ALL ON a2students FROM PUBLIC;
REVOKE ALL ON a2sections FROM PUBLIC;
REVOKE ALL ON a2professors FROM PUBLIC;
REVOKE ALL ON a2term FROM PUBLIC;
REVOKE ALL ON a2countries FROM PUBLIC;
REVOKE ALL ON a2employees FROM PUBLIC;
REVOKE ALL ON a2courses FROM PUBLIC;
REVOKE ALL ON a2departments FROM PUBLIC;

-- granting permissions for group users
GRANT ALL ON a2JNC_PROG_STUDENTS TO dbs301_201d15, dbs301_201e34, dbs301_201e06, dbs301_201d18 WITH GRANT OPTION;
GRANT ALL ON a2JNC_PROG_COURSES TO dbs301_201d15, dbs301_201e34, dbs301_201e06, dbs301_201d18 WITH GRANT OPTION;
GRANT ALL ON a2JNC_STUDENTS_SECTIONS TO dbs301_201d15, dbs301_201e34, dbs301_201e06, dbs301_201d18 WITH GRANT OPTION;
GRANT ALL ON a2programs TO dbs301_201d15, dbs301_201e34, dbs301_201e06, dbs301_201d18 WITH GRANT OPTION;
GRANT ALL ON a2advisors TO dbs301_201d15, dbs301_201e34, dbs301_201e06, dbs301_201d18 WITH GRANT OPTION;
GRANT ALL ON a2students TO dbs301_201d15, dbs301_201e34, dbs301_201e06, dbs301_201d18 WITH GRANT OPTION;
GRANT ALL ON a2sections TO dbs301_201d15, dbs301_201e34, dbs301_201e06, dbs301_201d18 WITH GRANT OPTION;
GRANT ALL ON a2professors TO dbs301_201d15, dbs301_201e34, dbs301_201e06, dbs301_201d18 WITH GRANT OPTION;
GRANT ALL ON a2term TO dbs301_201d15, dbs301_201e34, dbs301_201e06, dbs301_201d18 WITH GRANT OPTION;
GRANT ALL ON a2countries TO dbs301_201d15, dbs301_201e34, dbs301_201e06, dbs301_201d18 WITH GRANT OPTION;
GRANT ALL ON a2employees TO dbs301_201d15, dbs301_201e34, dbs301_201e06, dbs301_201d18 WITH GRANT OPTION;
GRANT ALL ON a2courses TO dbs301_201d15, dbs301_201e34, dbs301_201e06, dbs301_201d18 WITH GRANT OPTION;
GRANT ALL ON a2departments TO dbs301_201d15, dbs301_201e34, dbs301_201e06, dbs301_201d18 WITH GRANT OPTION;
